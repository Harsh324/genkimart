services:

  frontend: 
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    container_name: genkimart_frontend
    expose:
    - "3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=mock
    command: "npm run dev"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    networks:
      - genkimart_internal

  backend:
    build:
      context: ../backend
      args:
        - UV_INCLUDE_DEV={{UV_INCLUDE_DEV}}
    container_name: genkimart_backend
    env_file:
      - ../env/.env.dev
    working_dir: /app/backend
    command: ["/usr/bin/tini","--","gunicorn","config.wsgi:application","--bind","0.0.0.0:8000","--reload"]
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../backend:/app/backend:cached
      - ../static:/static
      - ../media:/media
    expose:
      - "8000"
    networks:
      - genkimart_internal
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    container_name: genkimart_nginx
    depends_on:
      - backend
      - frontend
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../static:/static:ro
      - ../media:/media:ro
    networks:
      - genkimart_internal
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: genkimart_db
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - genkimart_internal
    restart: unless-stopped

volumes:
  pgdata_dev:

networks:
  genkimart_internal: